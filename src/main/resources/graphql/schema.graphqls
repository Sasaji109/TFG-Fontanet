type Cliente {
    clienteId: Int!
    nombre: String
    apellidos: String
    numero: String
    usuario: Usuario
}

type Profesional {
    profesionalId: Int!
    nombre: String
    apellidos: String
    numero: String
    experiencia: Int
    oficio: String
    disponibilidad: String
    valoracion: String
    usuario: Usuario
}

type Favorito {
    clienteId: Int!
    profesional: Profesional
}

type Usuario {
    userId: Int!
    username: String
    correo: String
    password: String
    activado: Boolean
    fechaEnvio: LocalDateTime
    codigoActivacion: String
    role: String
}

scalar LocalDateTime

type Material {
    materialId: Int!
    nombre: String
    descripcion: String
    precio: Double
}

scalar Double

type Servicio {
    servicioId: Int!
    nombre: String
    descripcion: String
    tarifaBase: Double
}

type Contrato {
    contratoId: Int!
    cliente: Cliente
    profesional: Profesional
    servicio: Servicio
    fechaInicio: LocalDate
    fechaFin: LocalDate
    estado: String
}

scalar LocalDate

type Query {
    getAllClientes: [Cliente]!
    getClienteById(clienteId: Int!): Cliente

    getAllProfesionales: [Profesional]!
    getProfesionalById(profesionalId: Int!): Profesional
    getAllProfesionalesByExp(experiencia: Int!): [Profesional]!
    getAllProfesionalesByOficio(oficio: String!): [Profesional]!
    getAllProfesionalesByDisp(disponibilidad: String!): [Profesional]!
    getAllProfesionalesByVal(valoracion: Int!): [Profesional]!
    updateProfesionalVal(profesionalId: Int!, valoracion: Int!): Int

    getAllMateriales: [Material]!
    getMaterialById(materialId: Int!): Material

    getAllServicios: [Servicio]!
    getServicioById(servicioId: Int!): Servicio

    getAllContratos: [Contrato]!
    getContratosByCliente(clienteId: Int!): [Contrato]!
    getContratosByProfesional(profesionalId: Int!): [Contrato]!
    getContratosByEstado(estado: String!): [Contrato]!
    getContratoById(contratoId: Int!): Contrato

    getAllFavoritosByCliente(clienteId: Int!): [Favorito]!
}

type Mutation {
    deleteCliente(clienteId: Int!): Int
    deleteProfesional(profesionalId: Int!): Int

    deleteMaterial(materialId: Int!): Int
    deleteServicio(servicioId: Int!): Int

    deleteFavorito(clienteId: Int!, profesionalId: Int!): Int
}